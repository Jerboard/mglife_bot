import logging

from aiogram.filters import CommandStart
from aiogram.types import Message, CallbackQuery
from aiogram.utils.markdown import hbold
from aiogram.fsm.context import FSMContext
from aiogram.filters import StateFilter
from aiogram.fsm.state import default_state


import db
from init import dp, ADMINS, bot, DEBUG
from keyboards import inline_kb as kb
from utils.async_utils import get_silvers_chat, send_access


# @dp.message()
# async def ff(m: Message):
#     print(m.photo[-1].file_id)


@dp.message(CommandStart())
async def command_start_handler(message: Message, state: FSMContext) -> None:
    await state.clear()
    if message.from_user.id in ADMINS:
        await message.answer(text=hbold('–î–µ–π—Å—Ç–≤–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:'),
                             reply_markup=kb.get_admin_action_kb())

    else:
        user = await db.get_user_info(message.from_user.id)
        if user and user.status == 'access':

            await send_access(user)

        else:
            if DEBUG:
                photo_id = 'AgACAgIAAxkBAAImRWWxAAGw-tPwOJBY8cD3pO5hlHCS_gAC49kxGyToiUnuq3B7p7CKKAEAAwIAA3kAAzQE'
            else:
                # photo_id = 'AgACAgIAAxkBAANyZXCNd5RxATSiJISD1oMMOizDfzAAAgXVMRueHYFLX3QWedb7aTUBAAMCAAN5AAMzBA'
                photo_id = 'AgACAgIAAxkBAAIXv2WD3ZNgA3zgkI2fxOjazDyj33gjAAK00DEb7iUhSJa1vRduFvyOAQADAgADeQADMwQ'

            text = ('–£—Ä–∞–∞–∞ ü•≥ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–æ–∫—É–ø–∫–æ–π –ó–æ–ª–æ—Ç–æ–π  –∏–ª–∏ –°–µ—Ä–µ–±—Ä—è–Ω–Ω–æ–π –∫–∞—Ä—Ç—ã.\n\n'
                    '–ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ –ª—É—á—à–µ–º—É –≥–æ–¥—É –≤ —Å–≤–æ–µ–π –∂–∏–∑–Ω–∏ üòª ‚Äì –∏–º–µ–Ω–Ω–æ —Ç–∞–∫–∏–º –≤—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å–≤–æ–π 2024-–π —Å '
                    '–ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–º–∏ –∫—É—Ä—Å–∞–º–∏ –∏ –º–∞—Ä–∞—Ñ–æ–Ω–∞–º–∏ –Ω–∞ –∫–ª—é—á–µ–≤—ã–µ —Å—Ñ–µ—Ä—ã –∂–∏–∑–Ω–∏ üî•\n\n'
                    '* –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã, –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –∏—Ö —Å—é–¥–∞  '
                    'üëâ  https://4magiclife.getcourse.ru/cms/system/contact\n\n'
                    '‚ÄºÔ∏è –ê –¢–ï–ü–ï–†–¨ –°–ê–ú–û–ï –í–ê–ñ–ù–û–ï üëá \n\n'
                    '–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–æ–≥—Ä–∞–º–º–∞–º, –≤–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã, '
                    '–∫–æ—Ç–æ—Ä—ã–π —É–∫–∞–∑—ã–≤–∞–ª–∏ –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ ‚ùóÔ∏è\n\n'
                    '–ü–∏—à–∏—Ç–µ –µ–≥–æ –ø—Ä—è–º–æ –∑–¥–µ—Å—å, –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –º–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ ‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è')
            await message.answer_photo(photo=photo_id, caption=text)


# —Å–¥–µ–ª–∞—Ç—å —Ñ–∏–ª—å—Ç—Ä –Ω–∞ –ø—Ä–∏–≤–∞—Ç —á–∞—Ç
@dp.message(StateFilter(default_state))
async def check_email(message: Message, state: FSMContext) -> None:
    await state.clear ()
    if message.entities and message.entities[0].type == 'email':
        check_user = await db.get_email_info(message.text)
        keyboard = None

        if not check_user:
            await message.answer(
                text='–ü–æ—á—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.\n–í–æ–∑–º–æ–∂–Ω–æ –≤—ã –¥–æ–ø—É—Å—Ç–∏–ª–∏ –æ—à–∏–±–∫—É –∏–ª–∏ —É–∫–∞–∑–∞–ª–∏ –¥—Ä—É–≥—É—é –ø–æ—á—Ç—É –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ')
        else:
            print(check_user)

            if check_user.status == 'free':
                text = '–ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø–∞–ø–∫–µ —Å –∫—É—Ä—Å–∞–º–∏ –ø–æ –∫–∞—Ä—Ç–µ'
                keyboard = kb.get_gold_url_kb ()

                await db.del_user(check_user.tg_id)
                await db.add_user(tg_id=message.from_user.id,
                                  full_name=message.from_user.full_name,
                                  username=message.from_user.username,
                                  status='access',
                                  gc_id=check_user.gc_id,
                                  email=check_user.email,
                                  list_gc=check_user.list)

                all_chats = await db.get_all_chats()
                for chat in all_chats:
                    try:
                        await bot.unban_chat_member(chat_id=chat,
                                                    user_id=message.from_user.id,
                                                    only_if_banned=True)
                    except:
                        logging.warning(f'–ù–µ —Å–º–æ–≥ –¥–æ–±–∞–≤–∏—Ç—å {chat}')

            elif check_user.status == 'access' and check_user.tg_id == message.from_user.id:
                await send_access (check_user)
                return
            else:
                await message.answer('–ê–¥—Ä–µ—Å –ø–æ—á—Ç—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω')
                return

            if check_user.list == 'gold':
                await message.answer (
                    text=text,
                    disable_web_page_preview=True,
                    protect_content=True,
                    reply_markup=keyboard)

            else:
                if check_user.list == 'silver':
                    text = (
                        '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø–æ —Ç–∞—Ä–∏—Ñ—É "–°–µ—Ä–µ–±—Ä—è–Ω–∞—è –∫–∞—Ä—Ç–∞" –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¢–û–õ–¨–ö–û –¥–≤–∞ —Ñ–ª–∞–≥–º–∞–Ω–∞.\n\n'
                        '‚ùóÔ∏è–ü–æ—Å–ª–µ  –≤—ã–±–æ—Ä–∞ –ø–æ—è–≤–∏—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—ã–±–æ—Ä"'
                        '–ü–æ—Å–ª–µ –µ–µ –Ω–∞–∂–∞—Ç–∏—è —Å–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å –±—É–¥–µ—Ç <b>–ù–ï–í–û–ó–ú–û–ñ–ù–û</b>.\n\n'
                        '‚ùó–ö—É—Ä—Å "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç" –¥–æ–ø—É—Å–∫–∞–µ—Ç—Å—è –∫ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—é, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —É–∂–µ –ø—Ä–æ–π–¥–µ–Ω –∫—É—Ä—Å "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å". '
                        '‚ùó–ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –∫—É—Ä—Å–∞ "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç" —Å–º–µ–Ω–∏—Ç—å –ø–æ—Ç–æ–∫ –±—É–¥–µ—Ç –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.')
                else:
                    text = ('–ü–æ —É—Å–ª–æ–≤–∏—è–º —Ä–∞—Å—Å—Ä–æ—á–∫–∏ "–ó–æ–ª–æ—Ç–æ–π –∫–∞—Ä—Ç—ã" –≤—ã —Å–µ–π—á–∞—Å –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¢–û–õ–¨–ö–û –¥–≤–∞ —Ñ–ª–∞–≥–º–∞–Ω–∞.\n\n'
                            '‚ùóÔ∏è–ü–æ—Å–ª–µ  –≤—ã–±–æ—Ä–∞ –ø–æ—è–≤–∏—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—ã–±–æ—Ä"'
                            '–ü–æ—Å–ª–µ –µ–µ –Ω–∞–∂–∞—Ç–∏—è —Å–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å –±—É–¥–µ—Ç <b>–ù–ï–í–û–ó–ú–û–ñ–ù–û</b>.\n\n'
                            '‚ùó–ö—É—Ä—Å "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç" –¥–æ–ø—É—Å–∫–∞–µ—Ç—Å—è –∫ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—é, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —É–∂–µ –ø—Ä–æ–π–¥–µ–Ω –∫—É—Ä—Å "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å". '
                            '‚ùó–ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –∫—É—Ä—Å–∞ "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç" —Å–º–µ–Ω–∏—Ç—å –ø–æ—Ç–æ–∫ –±—É–¥–µ—Ç –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.')

                all_flagman = await db.get_all_flagman ()
                await message.answer(
                    text=text,
                    reply_markup=kb.get_silver_chanel_choice(
                        choice=[],
                        list_name=check_user.list,
                        all_flagman=all_flagman
                    )
                )

    else:
        await message.answer('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã')


# –≤—ã–±–æ—Ä —á–∞—Ç–æ–≤
@dp.callback_query(lambda cb: cb.data.startswith('choice_silver'))
async def admin_action(cb: CallbackQuery, state: FSMContext):
    _, chat_key, list_name = cb.data.split(':')
    await state.set_state('choice_silver')
    data = await state.get_data()
    choice = data.get('choice_chats')
    if choice is None:
        choice = []

    if len(choice) == 2:
        choice = choice[1:]

    choice.append(int(chat_key))
    await state.update_data(data={'choice_chats': choice, 'list_name': list_name})
    all_flagman = await db.get_all_flagman ()
    await cb.message.edit_reply_markup(
        reply_markup=kb.get_silver_chanel_choice(
            choice=choice,
            list_name=list_name,
            all_flagman=all_flagman
        ))


# –≤—ã–±–æ—Ä —á–∞—Ç–æ–≤ –¥–æ—Å—Ç—É–ø
@dp.callback_query(lambda cb: cb.data.startswith('confirm_choice_silver'))
async def admin_action(cb: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    await state.clear ()
    is_silver = True if data['list_name'] == 'silver' else False
    await cb.message.delete()
    await get_silvers_chat(
        user_id=cb.from_user.id,
        choice=data['choice_chats'],
        is_silver=is_silver)


# –æ—Ç–º–µ–Ω–∞ –¥–µ–π—Å—Ç–≤–∏—è
@dp.callback_query(lambda cb: cb.data.startswith('cancel'))
async def cancel(cb: CallbackQuery, state: FSMContext):
    await state.clear()
    await cb.message.delete()


# –ø–∏—à–µ—Ç –∞–π–¥–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
@dp.channel_post()
async def chat(message: Message):
    await db.add_chat (message.chat.id)
